openapi: 3.0.0
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    database:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        isLocked:
          type: boolean
        schema:
          type: object
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
  requestBodies:
    reset:
      content:
        application/json:
          schema:
            type: object
            properties:
              action:
                type: string
              value:
                type: string
              notifierOptions:
                type: object
            example:
              action: sendResetPwd
              value:
                email: rune@addin.dk
  responses:
    error:
      description: Errors
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                description: The error name (e.g. "BadRequest", "ValidationError", etc.)
              message:
                type: string
                description: The error message string
              code:
                type: integer
                description: The HTTP status code
              className:
                type: string
                description: A CSS class name that can be handy for styling errors based on the error type. (e.g. "bad-request" , etc.)
              data:
                type: object
                description: An object containing anything you passed to a Feathers error except for the errors object.
              errors:
                type: object
                description: This is typically validation errors or if you want to group multiple errors together.
            example:
              name: NotAuthenticated
              message: Invalid email/password
              code: 401
              className: not-authenticated
              data:
                message: Invalid email/password
              errors:

info:
  title: Metadatabase API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0.0
servers:
  - url: https://api.metadatabase.os2geo.dk
    description: Production
  - url: http://localhost:3030
    description: Local server for testing
paths:
  /users:
    post:
      tags:
        - Users
      summary: Create user.
      description: This operation creates a new user and sends an email to verify the user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                  format: password
              example:
                email: "rut@le34.dk"
                password: "1234"

      responses:
        '201':    # status code
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  isVerified:
                    type: boolean
                  updatedAt:
                    type: string
                    format: date-time

        '400':    # status code
          $ref: '#/components/responses/error'

  /authManagement:
    post:
      tags:
        - Auth
      summary: Send forgotten password notification.
      description: This operation sends an email to the user with a link to reset the password.
      requestBody:
        $ref: '#/components/requestBodies/reset'
      responses:
        '200':    # status code
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':    # status code
          $ref: '#/components/responses/error'
  /authentication:
    post:
      tags:
        - Auth
      summary: Returns a Json Web Token.
      description: This service authenticates the user based on local or JWT login.
      requestBody:
        description: |
          ## Local login with username and password
              {
                "strategy": "local",
                "email": "rune@addin.dk",
                "password": "1234"
              }
          ## Login with / validate JSON Web Token
              {
                "strategy": "jwt",
                "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6ImFjY2VzcyJ9.eyJ1c2VySWQiOiJkNGZhYTY4MS1mZjA0LTRiODUtOWU4Ny1hYmY4NzQ5NWM4YmIiLCJpYXQiOjE1NTY4Nzg2NjEsImV4cCI6MTU1Njk2NTA2MSwiYXVkIjoiaHR0cHM6Ly9nZW9ub3RlLmRrIiwiaXNzIjoiZ2Vvbm90ZSIsInN1YiI6ImFub255bW91cyIsImp0aSI6IjcwYjM5OThmLTRmYzYtNDgzMS04MTYxLTIwODVlMDg1NTZmNCJ9.NylWZSvJDmYPGrtdQDpLz_DNZ6onEzhnoYa2ky5bUNo"
              }
        content:
          application/json:
            schema:
              type: object
              properties:
                strategy:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
              example:
                strategy: local
                email: rune@addin.dk
                password: "1234"

      responses:
        '201':    # status code
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                example:
                  accessToken: eyJhbGciOiJIUzI1NiIsInR5cCI6ImFjY2VzcyJ9.eyJ1c2VySWQiOiJkNGZhYTY4MS1mZjA0LTRiODUtOWU4Ny1hYmY4NzQ5NWM4YmIiLCJpYXQiOjE1NTY4Nzg2NjEsImV4cCI6MTU1Njk2NTA2MSwiYXVkIjoiaHR0cHM6Ly9nZW9ub3RlLmRrIiwiaXNzIjoiZ2Vvbm90ZSIsInN1YiI6ImFub255bW91cyIsImp0aSI6IjcwYjM5OThmLTRmYzYtNDgzMS04MTYxLTIwODVlMDg1NTZmNCJ9.NylWZSvJDmYPGrtdQDpLz_DNZ6onEzhnoYa2ky5bUNo
        '401':    # status code
          $ref: '#/components/responses/error'
  /databases:
    get:
      tags:
        - Databases
      summary: List
      description: description
      security:
        - bearerAuth: []
      responses:
        '200':    # status code
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/database'

        '400':    # status code
          $ref: '#/components/responses/error'
  /export/{id}/{type}:
    get:
      tags:
        - Export
      summary: List
      description: description
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: database id
          schema:
            type: string
            format: uuid
        - in: path
          name: type
          required: true
          description: json, geojson, excel
          schema:
            type: string

      responses:
        '200':    # status code
          description: OK

        '400':    # status code
          $ref: '#/components/responses/error'
